78. Subsets

Given a set of distinct integers, nums, return all possible subsets (the power set).

Note: The solution set must not contain duplicate subsets.

Example:

Input: nums = [1,2,3]
Output:
[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]

https://leetcode.com/problems/subsets/description/

class Solution {
    public List<List<Integer>> subsets(int[] nums) {
        List<List<Integer>> list = new ArrayList<>();
        addSubset(0, nums, new ArrayList<Integer>(), list);
        return list;
    }
    
    private void addSubset(int index, int[] nums, List<Integer> current, List<List<Integer>> list) {
        list.add(current);
        for (int i = index; i < nums.length; i++) {
            List<Integer> temp = new ArrayList<>(current);
            temp.add(nums[i]);
            addSubset(i + 1, nums, temp, list);
        }
    }
    
}
