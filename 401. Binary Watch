401. Binary Watch

A binary watch has 4 LEDs on the top which represent the hours (0-11), and the 6 LEDs on the bottom represent the minutes (0-59).

Each LED represents a zero or one, with the least significant bit on the right.

For example, the above binary watch reads "3:25".

Given a non-negative integer n which represents the number of LEDs that are currently on, return all possible times the watch could represent.

Example:

Input: n = 1
Return: ["1:00", "2:00", "4:00", "8:00", "0:01", "0:02", "0:04", "0:08", "0:16", "0:32"] 

https://leetcode.com/problems/binary-watch/description/


class Solution {
    public List<String> readBinaryWatch(int num) {
        List<String> list = new ArrayList<String>();
        for (int i = 0; i < 12; i++) {
            for (int j = 0; j < 60; j++) {
                if (count(i) + count(j) == num) {
                    if (j < 10) {
                       list.add(i + ":0" + j); 
                    } else {
                        list.add(i + ":" + j);
                    }
                }
            }
        }
        return list;
    }
    
    private int count(int number) {
        int num = 0;
        while(number > 0) {
            num += (number % 2);
            number = number / 2;
        }
        return num;
    }
}


class Solution {
    public List<String> readBinaryWatch(int num) {
        List<String> list = new ArrayList<String>();
        for (int i = 0; i < 12; i++) {
            for (int j = 0; j < 60; j++) {
                String hour = Integer.toBinaryString(i);
                String minute = Integer.toBinaryString(j);
                if (toValid(hour, minute) == num) {
                    list.add(toTime(i, j));
                }
            }
        }
        return list;
    }
    
    private int toValid(String hour, String minute) {
        int num = 0;
        for (int i = 0; i < hour.length(); i++) {
            if (hour.charAt(i) == '1') {
                num++;
            }
        }
        for (int i = 0; i < minute.length(); i++) {
            if (minute.charAt(i) == '1') {
                num++;
            }
        }
        return num;
    }
    
    private String toTime(int hour, int minute) {
        if (minute < 10) {
            return hour + ":" + "0" + minute;
        } else {
            return hour + ":" + minute;
        }
    }
}
