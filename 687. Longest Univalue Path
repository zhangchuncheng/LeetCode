687. Longest Univalue Path
Given a binary tree, find the length of the longest path where each node in the path has the same value. This path may or may not pass through the root.

Note: The length of path between two nodes is represented by the number of edges between them.

Example 1:

Input:

              5
             / \
            4   5
           / \   \
          1   1   5
Output:

2
Example 2:

Input:

              1
             / \
            4   5
           / \   \
          4   4   5
Output:

2
Note: The given binary tree has not more than 10000 nodes. The height of the tree is not more than 1000.

提示：提交代码后，需要用简洁的语言解释一下代码思路~ 谢谢

历史题目和总结见公众号「每日一道算法题」

https://leetcode.com/problems/longest-univalue-path/description/


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
    int result = 0;
public:
    int longestUnivaluePath(TreeNode* root) 
    {
        int temp = DFS(root);
        return max(0,result-1);
    }
    int DFS(TreeNode* root) 
    {
        if(root==NULL) return 0;
        int L = DFS(root->left);
        int R = DFS(root->right);
        
        int LL = 0;
        int RR = 0;
        if(root->left!=NULL && root->left->val==root->val) LL = L;
        if(root->right!=NULL && root->right->val==root->val) RR = R;
        result = max(result, LL+RR+1);
        return max(LL+1, RR+1);
    }
};
