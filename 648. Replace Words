648. Replace Words

In English, we have a concept called root, which can be followed by some other words to form another longer word - let's call this word successor. For example, the root an, followed by other, which can form another word another.

Now, given a dictionary consisting of many roots and a sentence. You need to replace all the successor in the sentence with the root forming it. If a successor has many roots can form it, replace it with the root with the shortest length.

You need to output the sentence after the replacement.

Example 1:
Input: dict = ["cat", "bat", "rat"]
sentence = "the cattle was rattled by the battery"
Output: "the cat was rat by the bat"

Note:
The input will only have lower-case letters.
1 <= dict words number <= 1000
1 <= sentence words number <= 1000
1 <= root length <= 100
1 <= sentence words length <= 1000

https://leetcode.com/problems/replace-words/description/

https://www.youtube.com/watch?v=lxclkzAuNCY

/*
    替换单词
    1、找出给出的句子在字典里是否有相应的词根可以被替换
    2、切割单词，一个单词切割成一组单词，逐个增加。
    3、切割后的单词在给定的字典里面进行筛查
    使用set集合，优化对比时间
*/

class Solution {
    public String replaceWords(List<String> dict, String sentence) {
        Set<String> set = new HashSet<>(dict);
        StringBuilder sb = new StringBuilder();
        String[] words = sentence.split(" ");
        for(int i = 0; i < words.length; i++) {
            for (int j = 1; j <= words[i].length(); j++) {
                String root = words[i].substring(0, j);
                if (set.contains(root)) {
                    words[i] = root;
                }
            }
            sb.append(words[i] + " ");
        }
        return sb.substring(0, sb.length() - 1);
    }
}
